#
# ---------------------------------------------------------------------------------------
# List of Liquid Filters provided by Jekyll Core that will be utilized for their
# documentation.
#
# To document a new filter, create a new "list-item" below with the following keys:
#   name:           : [REQUIRED] A string label that identifies the filter
#   description:    : [REQUIRED] A short description of what to expect from the filter
#   version_badge:  : [OPTIONAL] Jekyll version that introduced the filter
#   examples:       : [REQUIRED] A 'nested list' comprised of inputs and outputs
#     input:        : [REQUIRED] The filter syntax and usage
#     output:       : [OPTIONAL] The output from the filter
#
# Tip: Use YAML Block notations to "fold" a long string, or to "break" a long string
#      to the following line. Block notations can also be used to avoid having to use
#      backslashes to escape quotes.
# ---------------------------------------------------------------------------------------
#
- name: Relative URL
# description: >-
#   Prepend the <code>baseurl</code> value to the input. Useful if
#   your site is hosted at a subpath rather than the root of the domain.
  description: >-
    입력값 앞에 <code>baseurl</code> 값을 추가한다. 사이트가
    최상위 경로가 아닌 하위 경로에서 호스팅 될 경우 유용하다.
  examples:
    - input: '{{ "/assets/style.css" | relative_url }}'
      output: '/my-baseurl/assets/style.css'

#

- name: Absolute URL
# description: Prepend the <code>url</code> and <code>baseurl</code> value to the input.
  description: 입력값 앞에 <code>url</code> 과 <code>baseurl</code> 값을 추가한다.
  examples:
    - input: '{{ "/assets/style.css" | absolute_url }}'
      output: 'http://example.com/my-baseurl/assets/style.css'

#

- name: Date to XML Schema
# description: Convert a Date into XML Schema (ISO 8601) format.
  description: 날짜를 XML 스키마 (ISO 8601) 형식으로 변환한다.
  examples:
    - input: '{{ site.time | date_to_xmlschema }}'
      output: '2008-11-07T13:07:54-08:00'

#

- name: Date to RFC-822 Format
# description: Convert a Date into the RFC-822 format used for RSS feeds.
  description: 날짜를 RSS 피드에 사용하는 RFC-822 형식으로 변환한다.
  examples:
    - input: '{{ site.time | date_to_rfc822 }}'
      output: 'Mon, 07 Nov 2008 13:07:54 -0800'

#

- name: Date to String
# description: Convert a date to short format.
  description: 날짜를 짧은 형식으로 변환한다.
  examples:
    - input: '{{ site.time | date_to_string }}'
      output: '07 Nov 2008'

#

- name: Date to String in ordinal US style
# description: 'Format a date to ordinal, US, short format.'
  description: 날짜를 미국식 짧은 서수형으로 변환한다.
  version_badge: 3.8.0
  examples:
    - input: '{{ site.time | date_to_string: "ordinal", "US" }}'
      output: 'Nov 7th, 2008'

#

- name: Date to Long String
# description: Format a date to long format.
  description: 날짜를 긴 형식으로 변환한다.
  examples:
    - input: '{{ site.time | date_to_long_string }}'
      output: '07 November 2008'

#

- name: Date to Long String in ordinal UK style
# description: 'Format a date to ordinal, UK, long format.'
  description: 날짜를 영국식 긴 서수형으로 변환한다.
  version_badge: 3.8.0
  examples:
    - input: '{{ site.time | date_to_long_string: "ordinal" }}'
      output: '7th November 2008'

#

- name: Where
# description: Select all the objects in an array where the key has the given value.
  description: 배열 안에서 특정 키와 값을 가진 객체들을 선택한다.
  examples:
    - input: '{{ site.members | where:"graduation_year","2014" }}'
      output:

#

- name: Where Expression
# description: Select all the objects in an array where the expression is true.
  description: 배열 안에서 표현식이 참인 객체들을 선택한다.
  version_badge: 3.2.0
  examples:
    - input: |-
        {{ site.members | where_exp:"item",
        "item.graduation_year == 2014" }}
      output:
    - input: |-
        {{ site.members | where_exp:"item",
        "item.graduation_year < 2014" }}
      output:
    - input: |-
        {{ site.members | where_exp:"item",
        "item.projects contains 'foo'" }}
      output:

#

- name: Group By
# description: Group an array's items by a given property.
  description: 배열 안의 항목들을 특정 속성으로 그룹 짓는다.
  examples:
    - input: '{{ site.members | group_by:"graduation_year" }}'
      output: |-
        [{"name"=>"2013", "items"=>[...]},
        {"name"=>"2014", "items"=>[...]}]

#

- name: Group By Expression
# description: Group an array's items using a Liquid expression.
  description: 배열 안의 항목들을 Liquid 표현식을 사용해 그룹 짓는다.
  version_badge: 3.4.0
  examples:
    - input: |-
        {{ site.members | group_by_exp: "item",
        "item.graduation_year | truncate: 3, ''" }}
      output: |-
        [{"name"=>"201", "items"=>[...]},
        {"name"=>"200", "items"=>[...]}]

#

- name: XML Escape
# description: Escape some text for use in XML.
  description: XML 에 사용되는 몇몇 텍스트를 이스케이프 한다.
  examples:
    - input: '{{ page.content | xml_escape }}'
      output:

#

- name: CGI Escape
# description: >-
#   CGI escape a string for use in a URL. Replaces any special characters
#   with appropriate <code>%XX</code> replacements. CGI escape normally
#   replaces a space with a plus <code>+</code> sign.
  description: >-
    URL 에 사용되는 CGI 이스케이프 문자열. 모든 특수문자를 그에 맞는
    <code>%XX</code> 로 변환한다. 일반적으로 CGI 이스케이프에서는
    공백이 <code>+</code> 문자로 교체된다.
  examples:
    - input: '{{ "foo, bar; baz?" | cgi_escape }}'
      output: 'foo%2C+bar%3B+baz%3F'

#

- name: URI Escape
# description: >-
#   Percent encodes any special characters in a URI.
#   URI escape normally replaces a space with <code>%20</code>.
#   <a href="https://en.wikipedia.org/wiki/Percent-encoding#Types_of_URI_characters">Reserved characters</a>
#   will not be escaped.
  description: >-
    URI 에 있는 특수 문자들에 퍼센트 문자 인코딩을 한다.
    일반적으로 URI 이스케이프에서는 공백이 <code>%20</code> 로 교체된다.
    <a href="https://en.wikipedia.org/wiki/Percent-encoding#Types_of_URI_characters">예약 문자들</a>은
    이스케이프되지 않는다.
  examples:
    - input: '{{ "http://foo.com/?q=foo, \bar?" | uri_escape }}'
      output: 'http://foo.com/?q=foo,%20%5Cbar?'

#

- name: Number of Words
# description: Count the number of words in some text.
  description: 텍스트 안의 단어 수를 센다.
  examples:
    - input: '{{ page.content | number_of_words }}'
      output: 1337

#

- name: Array to Sentence
# description: >-
#   Convert an array into a sentence. Useful for listing tags.
#   Optional argument for connector.
  description: >-
    배열을 한 문장으로 변환한다. 태그를 나열할 때 유용하다.
    커넥터에는 선택사항이다.
  examples:
    - input: '{{ page.tags | array_to_sentence_string }}'
      output: 'foo, bar, and baz'
    - input: '{{ page.tags | array_to_sentence_string: "or" }}'
      output: 'foo, bar, or baz'

#

- name: Markdownify
# description: Convert a Markdown-formatted string into HTML.
  description: 마크다운 형식 문자열을 HTML 로 변환한다.
  examples:
    - input: '{{ page.excerpt | markdownify }}'
      output:

#

- name: Smartify
# description: 'Convert "quotes" into &ldquo;smart quotes.&rdquo;'
  description: '"일반 따옴표" 를 &ldquo;세련된 따옴표&rdquo;로 변환한다.'
  examples:
    - input: '{{ page.title | smartify }}'
      output:

#

- name: Converting Sass/SCSS
# description: Convert a Sass- or SCSS-formatted string into CSS.
  description: Sass 또는 SCSS 형식 문자열을 CSS 로 변환한다.
  examples:
    - input: '{{ some_sass | sassify }}'
      output:
    - input: '{{ some_scss | scssify }}'
      output:

#

- name: Slugify
# description: Convert a string into a lowercase URL "slug". See below for options.
  description: 문자열을 소문자 URL "슬러그"로 변환한다. 자세한 옵션은 아래를 참고하시오.
  examples:
    - input: '{{ "The _config.yml file" | slugify }}'
      output: 'the-config-yml-file'
    - input: '{{ "The _config.yml file" | slugify: "pretty" }}'
      output: 'the-_config.yml-file'
    - input: '{{ "The _cönfig.yml file" | slugify: "ascii" }}'
      output: 'the-c-nfig-yml-file'
    - input: '{{ "The cönfig.yml file" | slugify: "latin" }}'
      output: 'the-config-yml-file'

#

- name: Data To JSON
# description: Convert Hash or Array to JSON.
  description: 해시나 배열을 JSON 으로 변환한다.
  examples:
    - input: '{{ site.data.projects | jsonify }}'
      output:

#

- name: Normalize Whitespace
# description: Replace any occurrence of whitespace with a single space.
  description: 모든 공백문자를 하나의 공백으로 변환한다.
  examples:
    - input: '{{ "a \n b" | normalize_whitespace }}'
      output:

#

- name: Sort
# description: >-
#   Sort an array. Optional arguments for hashes
#   1.&nbsp;property name
#   2.&nbsp;nils order (<em>first</em> or <em>last</em>).
  description: >-
    배열을 정렬한다. 해시를 위한 추가 전달인자
    1.&nbsp;프로퍼티 이름
    2.&nbsp;nils 순서 (<em>first</em> 또는 <em>last</em>).
  examples:
    - input: '{{ page.tags | sort }}'
      output:
    - input: '{{ site.posts | sort: "author" }}'
      output:
    - input: '{{ site.pages | sort: "title", "last" }}'
      output:

#

- name: Sample
# description: 'Pick a random value from an array. Optionally, pick multiple values.'
  description: '배열에서 랜덤으로 값을 하나 선택한다. 선택사항으로, 값을 여러개 고른다.'
  examples:
    - input: '{{ site.pages | sample }}'
      output:
    - input: '{{ site.pages | sample: 2 }}'
      output:

#

- name: To Integer
# description: Convert a string or boolean to integer.
  description: 문자열 또는 부울 값을 정수형으로 변환한다.
  examples:
    - input: '{{ some_var | to_integer }}'
      output:

#

- name: Array Filters
# description: >-
#   Push, pop, shift, and unshift elements from an Array.
#   These are <strong>NON-DESTRUCTIVE</strong>, i.e. they do not mutate the array,
#   but rather make a copy and mutate that.
  description: >-
    배열에 항목을 삽입, 추출, 순환시킨다.
    이 필터는 <strong>비파괴적</strong>이다. 예시, 해당 배열을 직접 변경하지 않고,
    복사본을 만든 후 변경한다.
  examples:
    - input: '{{ page.tags | push: "Spokane" }}'
      output: '["Seattle", "Tacoma", "Spokane"]'
    - input: '{{ page.tags | pop }}'
      output: '["Seattle"]'
    - input: '{{ page.tags | shift }}'
      output: '["Tacoma"]'
    - input: '{{ page.tags | unshift: "Olympia" }}'
      output: '["Olympia", "Seattle", "Tacoma"]'

#

- name: Inspect
# description: Convert an object into its String representation for debugging.
  description: 디버깅을 위해 객체를 문자열로 표시한다.
  examples:
    - input: '{{ some_var | inspect }}'
      output:
